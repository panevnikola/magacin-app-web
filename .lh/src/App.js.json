{
    "sourceFile": "src/App.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1640278318222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641249321988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,8 +176,9 @@\n \n const useStyles = makeStyles((theme) => ({\n   root: {\n     display: 'flex',\n+    background: 'red'\n   },\n   drawerHeader: {\n     display: 'flex',\n     alignItems: 'center',\n"
                },
                {
                    "date": 1641249366873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n \n const useStyles = makeStyles((theme) => ({\n   root: {\n     display: 'flex',\n-    background: 'red'\n+    // background: 'red'\n   },\n   drawerHeader: {\n     display: 'flex',\n     alignItems: 'center',\n"
                },
                {
                    "date": 1641249408026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,8 @@\n \n const useStyles = makeStyles((theme) => ({\n   root: {\n     display: 'flex',\n-    // background: 'red'\n   },\n   drawerHeader: {\n     display: 'flex',\n     alignItems: 'center',\n"
                }
            ],
            "date": 1640278318222,
            "name": "Commit-0",
            "content": "import React, { Suspense, useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport Header from './components/Header/Header';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Login from './components/Auth/Login/Login';\n\nconst Naracki = React.lazy(() => {\n  return import('./components/Naracki/Naracki');\n});\n\nconst Partneri = React.lazy(() => {\n  return import('./components/Partneri/Partneri');\n});\n\nconst PartnerCreate = React.lazy(() => {\n  return import('./components/Partneri/PartnerCreate/PartnerCreate');\n});\n\nconst Grupi = React.lazy(() => {\n  return import('./components/Grupi/Grupi');\n});\n\nconst GrupaCreate = React.lazy(() => {\n  return import('./components/Grupi/GrupaCreate/GrupaCreate');\n});\n\nconst Artikli = React.lazy(() => {\n  return import('./components/Artikli/Artikli');\n});\n\nconst ArtikalCreate = React.lazy(() => {\n  return import('./components/Artikli/ArtikalCreate/ArtikalCreate');\n});\n\nconst Dashboard = React.lazy(() => {\n  return import('./components/Dashboard/Dashboard');\n});\n\nconst drawerWidth = 240;\n\nconst socket = io('http://localhost:8080', { transports: ['websocket'] });\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const minWidthForSidebar = useMediaQuery('(min-width:800px)');\n\n  let routes = null;\n  let isAuth = localStorage.getItem('token') !== null;\n\n  const [showNotificationButton, setShowNotificationButton] = useState(false);\n\n  useEffect(() => {\n    socket.on('connection', () => {\n      console.log('socket conn ', socket.connected);\n    });\n\n    socket.on('createNaracka', (arg) => {\n      console.log('createNaracka arg', arg);\n    });\n  }, []);\n\n  useEffect(() => {\n    if ('Notification' in window) {\n      console.log('notifications enabled');\n      setShowNotificationButton(true);\n    }\n  }, []);\n\n  const askForNotificationPermission = () => {\n    Notification.requestPermission((result) => {\n      console.log('user choice ', result);\n      if (result !== 'granted') {\n        console.log('No permission granted!');\n      } else {\n        console.log('else');\n        displayConfirmNotification();\n      }\n    });\n  };\n\n  const displayConfirmNotification = () => {\n    if ('serviceWorker' in navigator) {\n      let options = {\n        body: 'You successfully subscribed to our Notification service',\n      };\n\n      navigator.serviceWorker.ready.then((swreg) => {\n        swreg.showNotification('Successfully subscribed!', options);\n      });\n    }\n  };\n\n  const handleSidebarOpen = () => {\n    console.log('handleSidebarOpen', open);\n    setOpen(true);\n    socket.emit('chat', {\n      message: 'Drawer chat closed',\n    });\n  };\n\n  socket.on('chat', function (data) {\n    console.log('chat on data', data);\n  });\n\n  const handleSidebarClose = () => {\n    console.log('handleSidebarClose', open);\n    setOpen(false);\n  };\n\n  routes = (\n    <Switch>\n      <Route path='/home' render={(props) => <Dashboard {...props} />}></Route>\n      <Route path='/naracki' render={(props) => <Naracki {...props} />}></Route>\n      <Route\n        path='/partneri/create'\n        render={(props) => <PartnerCreate {...props} />}\n      ></Route>\n      <Route\n        path='/partneri'\n        render={(props) => <Partneri {...props} />}\n      ></Route>\n      <Route\n        path='/grupi/create'\n        render={(props) => <GrupaCreate {...props} />}\n      ></Route>\n      <Route path='/grupi' render={(props) => <Grupi {...props} />}></Route>\n      <Route\n        path='/artikli/create'\n        render={(props) => <ArtikalCreate {...props} />}\n      ></Route>\n      <Route path='/artikli' render={(props) => <Artikli {...props} />}></Route>\n      <Redirect to='/naracki' />\n    </Switch>\n  );\n\n  return isAuth ? (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div className={classes.drawerHeader} />\n      {isAuth && (\n        <Header\n          openSidebar={handleSidebarOpen}\n          closeSidebar={handleSidebarClose}\n          open={open}\n        />\n      )}\n      {isAuth && minWidthForSidebar && (\n        <Sidebar\n          openSidebar={handleSidebarOpen}\n          closeSidebar={handleSidebarClose}\n          open={open}\n          showNotificationButton={showNotificationButton}\n          askForNotificationPermission={askForNotificationPermission}\n          displayConfirmNotification={displayConfirmNotification}\n        />\n      )}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </main>\n    </div>\n  ) : (\n    <Login />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default withRouter(App);\n"
        }
    ]
}