{
    "sourceFile": "src/components/Artikli/ArtikalCreate/ArtikalCreate.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 59,
            "patches": [
                {
                    "date": 1641128867506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641128881394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n         setCena('');\n         setDostapnost('');\n         setOpis('');\n         setGrupa('');\n+        setPodgrupa('');\n         setSuccessMessage(\n           location.state\n             ? 'Artiklot e uspeshno promenet!'\n             : 'Artiklot e uspeshno kreiran!'\n"
                },
                {
                    "date": 1641128893374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n     const novArtikal = {\n       ime,\n       cena,\n       grupa,\n+      podgrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n     };\n"
                },
                {
                    "date": 1641128939733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,8 +185,17 @@\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n+                label='Podgrupa na artikal'\n+                onChange={(event) => handleChange(event, 'podgrupa')}\n+                type='text'\n+                name='podgrupaNaArtikal'\n+                value={podgrupa}\n+              />\n+              <TextValidator\n+                className={classes.inputField}\n+                fullWidth\n                 label='Opis na artikal'\n                 onChange={(event) => handleChange(event, 'opis')}\n                 type='text'\n                 name='opisNaArtikal'\n"
                },
                {
                    "date": 1641128951108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,17 +200,8 @@\n                 type='text'\n                 name='opisNaArtikal'\n                 value={opis}\n               />\n-              <TextValidator\n-                className={classes.inputField}\n-                fullWidth\n-                label='Dali e artiklot dostapen ?'\n-                onChange={(event) => handleChange(event, 'dostapnost')}\n-                type='text'\n-                name='dostapnost'\n-                value={dostapnost}\n-              />\n             </Grid>\n           </Grid>\n           <div className={classes.buttons}>\n             {isLoading ? (\n"
                },
                {
                    "date": 1641129175926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,12 +79,12 @@\n     const novArtikal = {\n       ime,\n       cena,\n       grupa,\n-      podgrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n+      podgrupa,\n     };\n \n     if (location.state) {\n       onUpdateArtikal('/partneri', novArtikal, `/${location.state.id}`);\n@@ -170,8 +170,17 @@\n                 value={cena}\n                 validators={['required']}\n                 errorMessages={['poleto e zadolzhitelno']}\n               />\n+              <TextValidator\n+                className={classes.inputField}\n+                fullWidth\n+                label='Dali e artiklot dostapen ?'\n+                onChange={(event) => handleChange(event, 'dostapnost')}\n+                type='text'\n+                name='dostapnost'\n+                value={dostapnost}\n+              />\n             </Grid>\n \n             <Grid item lg={6} md={6} sm={12} xs={12}>\n               <TextValidator\n"
                },
                {
                    "date": 1641129326662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,8 +185,17 @@\n             <Grid item lg={6} md={6} sm={12} xs={12}>\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n+                label='Ime na artikal'\n+                onChange={(event) => handleChange(event, 'ime')}\n+                type='text'\n+                name='imeNaArtikal'\n+                value={ime}\n+              />\n+              <TextValidator\n+                className={classes.inputField}\n+                fullWidth\n                 label='Slika na artikal'\n                 onChange={(event) => handleChange(event, 'slikaUrl')}\n                 type='text'\n                 name='slikaNaArtikal'\n"
                },
                {
                    "date": 1641129438144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,11 @@\n       podgrupa,\n     };\n \n     if (location.state) {\n-      onUpdateArtikal('/partneri', novArtikal, `/${location.state.id}`);\n+      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n     } else {\n-      onCreateArtikal('/partneri', novArtikal);\n+      onCreateArtikal('/artikli', novArtikal);\n     }\n   };\n \n   const handleChange = (event, source) => {\n"
                },
                {
                    "date": 1641129670008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n       case 'cena':\n-        return setCena(event.target.value);\n+        return setCena(+event.target.value);\n       case 'grupa':\n         return setGrupa(event.target.value);\n       case 'podgrupa':\n         return setPodgrupa(event.target.value);\n"
                },
                {
                    "date": 1641129690651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         return setSlikaUrl(event.target.value);\n       case 'opis':\n         return setOpis(event.target.value);\n       case 'dostapnost':\n-        return setDostapnost(event.target.value);\n+        return setDostapnost(+event.target.value);\n       default:\n         return;\n     }\n   };\n"
                },
                {
                    "date": 1641131039257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n-import React, { useState, useRef } from 'react';\n+import React, { useState, useRef, useCallback, useEffect } from 'react';\n import { useHistory, useLocation } from 'react-router-dom';\n import { Button, Grid, Typography, Card } from '@material-ui/core';\n import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n import Snackbar from '@material-ui/core/Snackbar';\n import MuiAlert from '@material-ui/lab/Alert';\n import CircularProgress from '@material-ui/core/CircularProgress';\n \n import useStyles from './ArtikalCreateStyles';\n-import { postRequest, putRequest } from '../../../services/httpService';\n+import { postRequest, putRequest, getRequest } from '../../../services/httpService';\n \n const ArtikalCreate = (props) => {\n   const classes = useStyles();\n   const formRef = useRef('form');\n@@ -35,8 +35,20 @@\n   const [dostapnost, setDostapnost] = useState(\n     location.state ? location.state.dostapnost : ''\n   );\n \n+  useEffect(() => {\n+    onFetchGrupi();\n+  }, []);\n+\n+  const onFetchGrupi = useCallback(async () => {\n+    const result = await getRequest('/grupi');\n+    if (result.status === 200) {\n+      // setArtikli(result.data);\n+      console.log('fetch response data ', result.data);\n+    }\n+  }, []);\n+\n   const onCreateArtikal = async (path, body) => {\n     const result = await postRequest(path, body);\n     if (result.status === 200 || result.status === 201) {\n       setTimeout(() => {\n"
                },
                {
                    "date": 1641131239992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,13 @@\n import MuiAlert from '@material-ui/lab/Alert';\n import CircularProgress from '@material-ui/core/CircularProgress';\n \n import useStyles from './ArtikalCreateStyles';\n-import { postRequest, putRequest, getRequest } from '../../../services/httpService';\n+import {\n+  postRequest,\n+  putRequest,\n+  getRequest,\n+} from '../../../services/httpService';\n \n const ArtikalCreate = (props) => {\n   const classes = useStyles();\n   const formRef = useRef('form');\n@@ -35,20 +39,35 @@\n   const [dostapnost, setDostapnost] = useState(\n     location.state ? location.state.dostapnost : ''\n   );\n \n+  const [siteGrupi, setSiteGrupi] = useState([]);\n+  const [sitePodgrupi, setSitePodgrupi] = useState([]);\n+\n   useEffect(() => {\n     onFetchGrupi();\n   }, []);\n \n   const onFetchGrupi = useCallback(async () => {\n     const result = await getRequest('/grupi');\n     if (result.status === 200) {\n-      // setArtikli(result.data);\n-      console.log('fetch response data ', result.data);\n+      setSiteGrupi(result.data);\n     }\n   }, []);\n \n+  useEffect(() => {\n+    if (grupa) {\n+      onFetchPodgrupi();\n+    }\n+  }, [grupa]);\n+\n+  const onFetchPodgrupi = useCallback(async (imeNaGrupa) => {\n+    const result = await getRequest(`podgrupi/grupa/${imeNaGrupa}`);\n+    if (result.status === 200) {\n+      setSitePodgrupi(result.data);\n+    }\n+  }, []);\n+\n   const onCreateArtikal = async (path, body) => {\n     const result = await postRequest(path, body);\n     if (result.status === 200 || result.status === 201) {\n       setTimeout(() => {\n"
                },
                {
                    "date": 1641131249735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     const result = await getRequest(`podgrupi/grupa/${imeNaGrupa}`);\n     if (result.status === 200) {\n       setSitePodgrupi(result.data);\n     }\n-  }, []);\n+  }, [grupa]);\n \n   const onCreateArtikal = async (path, body) => {\n     const result = await postRequest(path, body);\n     if (result.status === 200 || result.status === 201) {\n"
                },
                {
                    "date": 1641131287661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,21 +46,21 @@\n   useEffect(() => {\n     onFetchGrupi();\n   }, []);\n \n+  useEffect(() => {\n+    if (grupa) {\n+      onFetchPodgrupi();\n+    }\n+  }, [grupa]);\n+\n   const onFetchGrupi = useCallback(async () => {\n     const result = await getRequest('/grupi');\n     if (result.status === 200) {\n       setSiteGrupi(result.data);\n     }\n   }, []);\n \n-  useEffect(() => {\n-    if (grupa) {\n-      onFetchPodgrupi();\n-    }\n-  }, [grupa]);\n-\n   const onFetchPodgrupi = useCallback(async (imeNaGrupa) => {\n     const result = await getRequest(`podgrupi/grupa/${imeNaGrupa}`);\n     if (result.status === 200) {\n       setSitePodgrupi(result.data);\n"
                },
                {
                    "date": 1641131352083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n     onFetchGrupi();\n   }, []);\n \n   useEffect(() => {\n+    console.log('UE GRUPA ', grupa);\n     if (grupa) {\n       onFetchPodgrupi();\n     }\n   }, [grupa]);\n"
                },
                {
                    "date": 1641131403440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     }\n   }, []);\n \n   const onFetchPodgrupi = useCallback(async (imeNaGrupa) => {\n-    const result = await getRequest(`podgrupi/grupa/${imeNaGrupa}`);\n+    const result = await getRequest(`/podgrupi/grupa/${imeNaGrupa}`);\n     if (result.status === 200) {\n       setSitePodgrupi(result.data);\n     }\n   }, [grupa]);\n"
                },
                {
                    "date": 1641131436729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \n   useEffect(() => {\n     console.log('UE GRUPA ', grupa);\n     if (grupa) {\n-      onFetchPodgrupi();\n+      onFetchPodgrupi(grupa);\n     }\n   }, [grupa]);\n \n   const onFetchGrupi = useCallback(async () => {\n"
                },
                {
                    "date": 1641298464048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState, useRef, useCallback, useEffect } from 'react';\n import { useHistory, useLocation } from 'react-router-dom';\n-import { Button, Grid, Typography, Card } from '@material-ui/core';\n+import { Button, Grid, Typography, Card, TextField } from '@material-ui/core';\n import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n+import Autocomplete from '@material-ui/lab/Autocomplete';\n import Snackbar from '@material-ui/core/Snackbar';\n import MuiAlert from '@material-ui/lab/Alert';\n import CircularProgress from '@material-ui/core/CircularProgress';\n \n@@ -162,8 +163,10 @@\n \n     setOpenSnackbar(false);\n   };\n \n+  console.log('AC siteGrupi ', siteGrupi);\n+\n   return (\n     <div className={classes.container}>\n       <Typography variant='h5'>Kreiraj Nov Artikal</Typography>\n       <Card className={classes.card}>\n@@ -182,8 +185,19 @@\n                 type='text'\n                 name='id'\n                 value={id}\n               />\n+              <Autocomplete\n+              id='najdiPartner'\n+              options={siteGrupi}\n+              getOptionLabel={(option) => (option.ime ? option.ime : '')}\n+              style={{ minWidth: 210 }}\n+              onChange={(event, values) => onPartnerChange(event, values)}\n+              value={grupa}\n+              renderInput={(params) => (\n+                <TextField {...params} label='Izberi Grupa' margin='normal' />\n+              )}\n+            />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n                 label='Grupa na artikal'\n"
                },
                {
                    "date": 1641298509309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,8 +126,10 @@\n     }\n   };\n \n   const handleChange = (event, source) => {\n+    console.log('source ', source);\n+    console.log('source etv ', event.target.value);\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n       case 'cena':\n@@ -190,9 +192,9 @@\n               id='najdiPartner'\n               options={siteGrupi}\n               getOptionLabel={(option) => (option.ime ? option.ime : '')}\n               style={{ minWidth: 210 }}\n-              onChange={(event, values) => onPartnerChange(event, values)}\n+              onChange={(event, values) => handleChange(event, values)}\n               value={grupa}\n               renderInput={(params) => (\n                 <TextField {...params} label='Izberi Grupa' margin='normal' />\n               )}\n"
                },
                {
                    "date": 1641298584839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,17 +126,15 @@\n     }\n   };\n \n   const handleChange = (event, source) => {\n-    console.log('source ', source);\n-    console.log('source etv ', event.target.value);\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n       case 'cena':\n         return setCena(+event.target.value);\n       case 'grupa':\n-        return setGrupa(event.target.value);\n+        return setGrupa(source.ime);\n       case 'podgrupa':\n         return setPodgrupa(event.target.value);\n       case 'slikaUrl':\n         return setSlikaUrl(event.target.value);\n@@ -188,9 +186,9 @@\n                 name='id'\n                 value={id}\n               />\n               <Autocomplete\n-              id='najdiPartner'\n+              id='najdiGrupa'\n               options={siteGrupi}\n               getOptionLabel={(option) => (option.ime ? option.ime : '')}\n               style={{ minWidth: 210 }}\n               onChange={(event, values) => handleChange(event, values)}\n"
                },
                {
                    "date": 1641298609880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,14 +61,17 @@\n       setSiteGrupi(result.data);\n     }\n   }, []);\n \n-  const onFetchPodgrupi = useCallback(async (imeNaGrupa) => {\n-    const result = await getRequest(`/podgrupi/grupa/${imeNaGrupa}`);\n-    if (result.status === 200) {\n-      setSitePodgrupi(result.data);\n-    }\n-  }, [grupa]);\n+  const onFetchPodgrupi = useCallback(\n+    async (imeNaGrupa) => {\n+      const result = await getRequest(`/podgrupi/grupa/${imeNaGrupa}`);\n+      if (result.status === 200) {\n+        setSitePodgrupi(result.data);\n+      }\n+    },\n+    [grupa]\n+  );\n \n   const onCreateArtikal = async (path, body) => {\n     const result = await postRequest(path, body);\n     if (result.status === 200 || result.status === 201) {\n@@ -186,26 +189,17 @@\n                 name='id'\n                 value={id}\n               />\n               <Autocomplete\n-              id='najdiGrupa'\n-              options={siteGrupi}\n-              getOptionLabel={(option) => (option.ime ? option.ime : '')}\n-              style={{ minWidth: 210 }}\n-              onChange={(event, values) => handleChange(event, values)}\n-              value={grupa}\n-              renderInput={(params) => (\n-                <TextField {...params} label='Izberi Grupa' margin='normal' />\n-              )}\n-            />\n-              <TextValidator\n-                className={classes.inputField}\n-                fullWidth\n-                label='Grupa na artikal'\n-                onChange={(event) => handleChange(event, 'grupa')}\n-                type='text'\n-                name='grupaNaArtikal'\n+                id='najdiGrupa'\n+                options={siteGrupi}\n+                getOptionLabel={(option) => (option.ime ? option.ime : '')}\n+                style={{ minWidth: 210 }}\n+                onChange={(event, values) => handleChange(event, values)}\n                 value={grupa}\n+                renderInput={(params) => (\n+                  <TextField {...params} label='Izberi Grupa' margin='normal' />\n+                )}\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n"
                },
                {
                    "date": 1641298634340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleChange(event, values)}\n                 value={grupa}\n                 renderInput={(params) => (\n-                  <TextField {...params} label='Izberi Grupa' margin='normal' />\n+                  <TextField {...params} className={classes.inputField} label='Izberi Grupa' margin='normal' />\n                 )}\n               />\n               <TextValidator\n                 className={classes.inputField}\n"
                },
                {
                    "date": 1641298641549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleChange(event, values)}\n                 value={grupa}\n                 renderInput={(params) => (\n-                  <TextField {...params} className={classes.inputField} label='Izberi Grupa' margin='normal' />\n+                  <TextField {...params} label='Izberi Grupa' margin='normal' />\n                 )}\n               />\n               <TextValidator\n                 className={classes.inputField}\n"
                },
                {
                    "date": 1641298651323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleChange(event, values)}\n                 value={grupa}\n                 renderInput={(params) => (\n-                  <TextField {...params} label='Izberi Grupa' margin='normal' />\n+                  <TextField {...params} label='Izberi Grupa' />\n                 )}\n               />\n               <TextValidator\n                 className={classes.inputField}\n"
                },
                {
                    "date": 1641298667353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,8 +190,9 @@\n                 value={id}\n               />\n               <Autocomplete\n                 id='najdiGrupa'\n+                className={classes.inputField}\n                 options={siteGrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleChange(event, values)}\n"
                },
                {
                    "date": 1641298824200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,13 @@\n       onCreateArtikal('/artikli', novArtikal);\n     }\n   };\n \n+  const nadleGrupaChange = (event, grupa) => {\n+    console.log('grupa', grupa);\n+    setGrupa(grupa);\n+  };\n+\n   const handleChange = (event, source) => {\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n@@ -194,9 +199,9 @@\n                 className={classes.inputField}\n                 options={siteGrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n-                onChange={(event, values) => handleChange(event, values)}\n+                onChange={(event, values) => nadleGrupaChange(event, values)}\n                 value={grupa}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Grupa' />\n                 )}\n"
                },
                {
                    "date": 1641298895576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,8 @@\n     }\n   };\n \n   const nadleGrupaChange = (event, grupa) => {\n-    console.log('grupa', grupa);\n     setGrupa(grupa);\n   };\n \n   const handleChange = (event, source) => {\n@@ -171,10 +170,8 @@\n \n     setOpenSnackbar(false);\n   };\n \n-  console.log('AC siteGrupi ', siteGrupi);\n-\n   return (\n     <div className={classes.container}>\n       <Typography variant='h5'>Kreiraj Nov Artikal</Typography>\n       <Card className={classes.card}>\n"
                },
                {
                    "date": 1641298949540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,22 +237,22 @@\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n-                label='Slika na artikal'\n-                onChange={(event) => handleChange(event, 'slikaUrl')}\n+                label='Podgrupa na artikal'\n+                onChange={(event) => handleChange(event, 'podgrupa')}\n                 type='text'\n-                name='slikaNaArtikal'\n-                value={slikaUrl}\n+                name='podgrupaNaArtikal'\n+                value={podgrupa}\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n-                label='Podgrupa na artikal'\n-                onChange={(event) => handleChange(event, 'podgrupa')}\n+                label='Slika na artikal'\n+                onChange={(event) => handleChange(event, 'slikaUrl')}\n                 type='text'\n-                name='podgrupaNaArtikal'\n-                value={podgrupa}\n+                name='slikaNaArtikal'\n+                value={slikaUrl}\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n"
                },
                {
                    "date": 1641298965437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n       onCreateArtikal('/artikli', novArtikal);\n     }\n   };\n \n-  const nadleGrupaChange = (event, grupa) => {\n+  const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n   };\n \n   const handleChange = (event, source) => {\n@@ -196,9 +196,9 @@\n                 className={classes.inputField}\n                 options={siteGrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n-                onChange={(event, values) => nadleGrupaChange(event, values)}\n+                onChange={(event, values) => handleGrupaChange(event, values)}\n                 value={grupa}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Grupa' />\n                 )}\n"
                },
                {
                    "date": 1641299000258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,10 @@\n \n     setOpenSnackbar(false);\n   };\n \n+  console.log('site podgrupi ', sitePodgrupi);\n+\n   return (\n     <div className={classes.container}>\n       <Typography variant='h5'>Kreiraj Nov Artikal</Typography>\n       <Card className={classes.card}>\n"
                },
                {
                    "date": 1641299051020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n   useEffect(() => {\n     console.log('UE GRUPA ', grupa);\n     if (grupa) {\n-      onFetchPodgrupi(grupa);\n+      onFetchPodgrupi(grupa.ime);\n     }\n   }, [grupa]);\n \n   const onFetchGrupi = useCallback(async () => {\n"
                },
                {
                    "date": 1641299138289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,8 +132,12 @@\n   const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n   };\n \n+  const handlePodgrupaChange = (event, podgrupa) => {\n+    setPodgrupa(podgrupa);\n+  };\n+\n   const handleChange = (event, source) => {\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n@@ -236,16 +240,19 @@\n                 type='text'\n                 name='imeNaArtikal'\n                 value={ime}\n               />\n-              <TextValidator\n+              <Autocomplete\n+                id='najdiPodgrupa'\n                 className={classes.inputField}\n-                fullWidth\n-                label='Podgrupa na artikal'\n-                onChange={(event) => handleChange(event, 'podgrupa')}\n-                type='text'\n-                name='podgrupaNaArtikal'\n+                options={sitePodgrupi}\n+                getOptionLabel={(option) => (option.ime ? option.ime : '')}\n+                style={{ minWidth: 210 }}\n+                onChange={(event, values) => handlePodgrupaChange(event, values)}\n                 value={podgrupa}\n+                renderInput={(params) => (\n+                  <TextField {...params} label='Izberi Podgrupa' />\n+                )}\n               />\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n"
                },
                {
                    "date": 1641299212681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,10 @@\n       dostapnost,\n       podgrupa,\n     };\n \n+    console.log('nov artikal ', novArtikal);\n+\n     if (location.state) {\n       onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n     } else {\n       onCreateArtikal('/artikli', novArtikal);\n"
                },
                {
                    "date": 1641299306938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,25 +111,28 @@\n   };\n \n   const handleFormSubmit = () => {\n     setIsLoading(true);\n+    const imeNaGrupa = grupa.ime;\n+    const imeNaPodgrupa = podgrupa.ime;\n+\n     const novArtikal = {\n       ime,\n       cena,\n-      grupa,\n+      imeNaGrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n-      podgrupa,\n+      imeNaPodgrupa,\n     };\n \n     console.log('nov artikal ', novArtikal);\n \n-    if (location.state) {\n-      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n-    } else {\n-      onCreateArtikal('/artikli', novArtikal);\n-    }\n+    // if (location.state) {\n+    //   onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+    // } else {\n+    //   onCreateArtikal('/artikli', novArtikal);\n+    // }\n   };\n \n   const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n"
                },
                {
                    "date": 1641299336854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,13 +126,13 @@\n     };\n \n     console.log('nov artikal ', novArtikal);\n \n-    // if (location.state) {\n-    //   onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n-    // } else {\n-    //   onCreateArtikal('/artikli', novArtikal);\n-    // }\n+    if (location.state) {\n+      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+    } else {\n+      onCreateArtikal('/artikli', novArtikal);\n+    }\n   };\n \n   const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n"
                },
                {
                    "date": 1641299465264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,13 +117,13 @@\n \n     const novArtikal = {\n       ime,\n       cena,\n-      imeNaGrupa,\n+      grupa: imeNaGrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n-      imeNaPodgrupa,\n+      podgrupa: imeNaPodgrupa,\n     };\n \n     console.log('nov artikal ', novArtikal);\n \n"
                },
                {
                    "date": 1641299550772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,12 @@\n   const [slikaUrl, setSlikaUrl] = useState(\n     location.state ? location.state.slikaUrl : ''\n   );\n   const [grupa, setGrupa] = useState(\n-    location.state ? location.state.grupa : ''\n+    location.state ? location.state.grupa.ime : ''\n   );\n   const [podgrupa, setPodgrupa] = useState(\n-    location.state ? location.state.podgrupa : ''\n+    location.state ? location.state.podgrupa.ime : ''\n   );\n   const [opis, setOpis] = useState(location.state ? location.state.opis : '');\n   const [cena, setCena] = useState(location.state ? location.state.cena : '');\n   const [dostapnost, setDostapnost] = useState(\n"
                },
                {
                    "date": 1641299563525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,12 @@\n   const [slikaUrl, setSlikaUrl] = useState(\n     location.state ? location.state.slikaUrl : ''\n   );\n   const [grupa, setGrupa] = useState(\n-    location.state ? location.state.grupa.ime : ''\n+    location.state ? location.state.grupa : ''\n   );\n   const [podgrupa, setPodgrupa] = useState(\n-    location.state ? location.state.podgrupa.ime : ''\n+    location.state ? location.state.podgrupa : ''\n   );\n   const [opis, setOpis] = useState(location.state ? location.state.opis : '');\n   const [cena, setCena] = useState(location.state ? location.state.cena : '');\n   const [dostapnost, setDostapnost] = useState(\n"
                },
                {
                    "date": 1641299581748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                 options={siteGrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleGrupaChange(event, values)}\n-                value={grupa}\n+                value={grupa.ime}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Grupa' />\n                 )}\n               />\n@@ -252,9 +252,9 @@\n                 options={sitePodgrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handlePodgrupaChange(event, values)}\n-                value={podgrupa}\n+                value={podgrupa.ime}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Podgrupa' />\n                 )}\n               />\n"
                },
                {
                    "date": 1641306740212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                 options={siteGrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handleGrupaChange(event, values)}\n-                value={grupa.ime}\n+                value={grupa}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Grupa' />\n                 )}\n               />\n@@ -252,9 +252,9 @@\n                 options={sitePodgrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n                 onChange={(event, values) => handlePodgrupaChange(event, values)}\n-                value={podgrupa.ime}\n+                value={podgrupa}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Podgrupa' />\n                 )}\n               />\n"
                },
                {
                    "date": 1641306795717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n \n   const [siteGrupi, setSiteGrupi] = useState([]);\n   const [sitePodgrupi, setSitePodgrupi] = useState([]);\n \n+  console.log('location.state  ', sitePodgrupi);\n+\n   useEffect(() => {\n     onFetchGrupi();\n   }, []);\n \n"
                },
                {
                    "date": 1641307019684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,16 +43,15 @@\n \n   const [siteGrupi, setSiteGrupi] = useState([]);\n   const [sitePodgrupi, setSitePodgrupi] = useState([]);\n \n-  console.log('location.state  ', sitePodgrupi);\n+  console.log('location.state  ', location.state);\n \n   useEffect(() => {\n     onFetchGrupi();\n   }, []);\n \n   useEffect(() => {\n-    console.log('UE GRUPA ', grupa);\n     if (grupa) {\n       onFetchPodgrupi(grupa.ime);\n     }\n   }, [grupa]);\n"
                },
                {
                    "date": 1641307114205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,26 @@\n     onFetchGrupi();\n   }, []);\n \n   useEffect(() => {\n+    if(location.state) {\n+      onFetchGrupaObject(location.state.grupa);\n+    }\n+  }, []);\n+\n+  useEffect(() => {\n     if (grupa) {\n       onFetchPodgrupi(grupa.ime);\n     }\n   }, [grupa]);\n \n+  const onFetchGrupaObject = useCallback(async (ime) => {\n+    const result = await getRequest(`/grupi/byname/${ime}`);\n+    if (result.status === 200) {\n+      setGrupa(result.data);\n+    }\n+  }, []);\n+\n   const onFetchGrupi = useCallback(async () => {\n     const result = await getRequest('/grupi');\n     if (result.status === 200) {\n       setSiteGrupi(result.data);\n"
                },
                {
                    "date": 1641307275933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n \n   useEffect(() => {\n     if(location.state) {\n       onFetchGrupaObject(location.state.grupa);\n+      onFetchPodgrupaObject(location.state.podgrupa);\n     }\n   }, []);\n \n   useEffect(() => {\n@@ -68,8 +69,15 @@\n       setGrupa(result.data);\n     }\n   }, []);\n \n+  const onFetchPodgrupaObject = useCallback(async (ime) => {\n+    const result = await getRequest(`/podgrupi/byname/${ime}`);\n+    if (result.status === 200) {\n+      setPodgrupa(result.data);\n+    }\n+  }, []);\n+\n   const onFetchGrupi = useCallback(async () => {\n     const result = await getRequest('/grupi');\n     if (result.status === 200) {\n       setSiteGrupi(result.data);\n"
                },
                {
                    "date": 1641310217053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,8 +296,9 @@\n                 onChange={(event) => handleChange(event, 'opis')}\n                 type='text'\n                 name='opisNaArtikal'\n                 value={opis}\n+                multiLine\n               />\n             </Grid>\n           </Grid>\n           <div className={classes.buttons}>\n"
                },
                {
                    "date": 1641310525910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,13 +148,13 @@\n     };\n \n     console.log('nov artikal ', novArtikal);\n \n-    if (location.state) {\n-      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n-    } else {\n-      onCreateArtikal('/artikli', novArtikal);\n-    }\n+    // if (location.state) {\n+    //   onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+    // } else {\n+    //   onCreateArtikal('/artikli', novArtikal);\n+    // }\n   };\n \n   const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n"
                },
                {
                    "date": 1641310575840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,8 +164,9 @@\n     setPodgrupa(podgrupa);\n   };\n \n   const handleChange = (event, source) => {\n+    console.log('handleChange ', event.target.value)\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n       case 'cena':\n"
                },
                {
                    "date": 1641310608819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,13 +148,13 @@\n     };\n \n     console.log('nov artikal ', novArtikal);\n \n-    // if (location.state) {\n-    //   onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n-    // } else {\n-    //   onCreateArtikal('/artikli', novArtikal);\n-    // }\n+    if (location.state) {\n+      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+    } else {\n+      onCreateArtikal('/artikli', novArtikal);\n+    }\n   };\n \n   const handleGrupaChange = (event, grupa) => {\n     setGrupa(grupa);\n"
                },
                {
                    "date": 1641310860379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,13 +146,13 @@\n       dostapnost,\n       podgrupa: imeNaPodgrupa,\n     };\n \n-    console.log('nov artikal ', novArtikal);\n-\n     if (location.state) {\n+      console.log('UPDT ', novArtikal);\n       onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n     } else {\n+      console.log('CRTE ', novArtikal);\n       onCreateArtikal('/artikli', novArtikal);\n     }\n   };\n \n"
                },
                {
                    "date": 1643829056116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n       grupa: imeNaGrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n-      podgrupa: imeNaPodgrupa,\n+      podgrupa: imeNaPodgrupa || '',\n     };\n \n     if (location.state) {\n       console.log('UPDT ', novArtikal);\n"
                },
                {
                    "date": 1643829110949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n       grupa: imeNaGrupa,\n       slikaUrl,\n       opis,\n       dostapnost,\n-      podgrupa: imeNaPodgrupa || '',\n+      podgrupa: imeNaPodgrupa || null,\n     };\n \n     if (location.state) {\n       console.log('UPDT ', novArtikal);\n"
                },
                {
                    "date": 1645867305366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     onFetchGrupi();\n   }, []);\n \n   useEffect(() => {\n-    if(location.state) {\n+    if (location.state) {\n       onFetchGrupaObject(location.state.grupa);\n       onFetchPodgrupaObject(location.state.podgrupa);\n     }\n   }, []);\n@@ -164,9 +164,9 @@\n     setPodgrupa(podgrupa);\n   };\n \n   const handleChange = (event, source) => {\n-    console.log('handleChange ', event.target.value)\n+    console.log('handleChange ', event.target.value);\n     switch (source) {\n       case 'ime':\n         return setIme(event.target.value);\n       case 'cena':\n@@ -254,9 +254,9 @@\n                 label='Dali e artiklot dostapen ?'\n                 onChange={(event) => handleChange(event, 'dostapnost')}\n                 type='text'\n                 name='dostapnost'\n-                value={dostapnost}\n+                value={dostapnost === 0 ? 'NE' : 'DA'}\n               />\n             </Grid>\n \n             <Grid item lg={6} md={6} sm={12} xs={12}>\n@@ -274,9 +274,11 @@\n                 className={classes.inputField}\n                 options={sitePodgrupi}\n                 getOptionLabel={(option) => (option.ime ? option.ime : '')}\n                 style={{ minWidth: 210 }}\n-                onChange={(event, values) => handlePodgrupaChange(event, values)}\n+                onChange={(event, values) =>\n+                  handlePodgrupaChange(event, values)\n+                }\n                 value={podgrupa}\n                 renderInput={(params) => (\n                   <TextField {...params} label='Izberi Podgrupa' />\n                 )}\n"
                },
                {
                    "date": 1645867529669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useRef, useCallback, useEffect } from 'react';\n import { useHistory, useLocation } from 'react-router-dom';\n-import { Button, Grid, Typography, Card, TextField } from '@material-ui/core';\n+import { Button, Grid, Typography, Card, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\n import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n import Autocomplete from '@material-ui/lab/Autocomplete';\n import Snackbar from '@material-ui/core/Snackbar';\n import MuiAlert from '@material-ui/lab/Alert';\n@@ -247,17 +247,29 @@\n                 value={cena}\n                 validators={['required']}\n                 errorMessages={['poleto e zadolzhitelno']}\n               />\n-              <TextValidator\n+              <FormControl fullWidth>\n+                <InputLabel id='demo-simple-select-label'>Dali e artiklot dostapen ?</InputLabel>\n+                <Select\n+                  labelId='demo-simple-select-label'\n+                  id='demo-simple-select'\n+                  value={dostapnost}\n+                  onChange={handleChange}\n+                >\n+                  <MenuItem value={0}>NE</MenuItem>\n+                  <MenuItem value={1}>DA</MenuItem>\n+                </Select>\n+              </FormControl>\n+              {/* <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n                 label='Dali e artiklot dostapen ?'\n                 onChange={(event) => handleChange(event, 'dostapnost')}\n                 type='text'\n                 name='dostapnost'\n                 value={dostapnost === 0 ? 'NE' : 'DA'}\n-              />\n+              /> */}\n             </Grid>\n \n             <Grid item lg={6} md={6} sm={12} xs={12}>\n               <TextValidator\n"
                },
                {
                    "date": 1645867584685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,14 +248,14 @@\n                 validators={['required']}\n                 errorMessages={['poleto e zadolzhitelno']}\n               />\n               <FormControl fullWidth>\n-                <InputLabel id='demo-simple-select-label'>Dali e artiklot dostapen ?</InputLabel>\n+                <InputLabel id='dostapnost-select-label'>Dali e artiklot dostapen ?</InputLabel>\n                 <Select\n-                  labelId='demo-simple-select-label'\n-                  id='demo-simple-select'\n+                  labelId='dostapnost-select'\n+                  id='dostapnost-select'\n                   value={dostapnost}\n-                  onChange={handleChange}\n+                  onChange={(event) => handleChange(event, 'dostapnost')}\n                 >\n                   <MenuItem value={0}>NE</MenuItem>\n                   <MenuItem value={1}>DA</MenuItem>\n                 </Select>\n"
                },
                {
                    "date": 1645867714630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,17 +259,8 @@\n                   <MenuItem value={0}>NE</MenuItem>\n                   <MenuItem value={1}>DA</MenuItem>\n                 </Select>\n               </FormControl>\n-              {/* <TextValidator\n-                className={classes.inputField}\n-                fullWidth\n-                label='Dali e artiklot dostapen ?'\n-                onChange={(event) => handleChange(event, 'dostapnost')}\n-                type='text'\n-                name='dostapnost'\n-                value={dostapnost === 0 ? 'NE' : 'DA'}\n-              /> */}\n             </Grid>\n \n             <Grid item lg={6} md={6} sm={12} xs={12}>\n               <TextValidator\n"
                },
                {
                    "date": 1645867745850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,17 @@\n import React, { useState, useRef, useCallback, useEffect } from 'react';\n import { useHistory, useLocation } from 'react-router-dom';\n-import { Button, Grid, Typography, Card, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\n+import {\n+  Button,\n+  Grid,\n+  Typography,\n+  Card,\n+  TextField,\n+  FormControl,\n+  Select,\n+  InputLabel,\n+  MenuItem,\n+} from '@material-ui/core';\n import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n import Autocomplete from '@material-ui/lab/Autocomplete';\n import Snackbar from '@material-ui/core/Snackbar';\n import MuiAlert from '@material-ui/lab/Alert';\n@@ -248,9 +258,11 @@\n                 validators={['required']}\n                 errorMessages={['poleto e zadolzhitelno']}\n               />\n               <FormControl fullWidth>\n-                <InputLabel id='dostapnost-select-label'>Dali e artiklot dostapen ?</InputLabel>\n+                <InputLabel id='dostapnost-select-label'>\n+                  Dali e artiklot dostapen ?\n+                </InputLabel>\n                 <Select\n                   labelId='dostapnost-select'\n                   id='dostapnost-select'\n                   value={dostapnost}\n"
                },
                {
                    "date": 1645867960132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,8 +156,10 @@\n       dostapnost,\n       podgrupa: imeNaPodgrupa || null,\n     };\n \n+    console.log(\"SUBMIT FORM \", novArtikal);\n+\n     if (location.state) {\n       console.log('UPDT ', novArtikal);\n       onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n     } else {\n"
                },
                {
                    "date": 1645868059709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,8 +142,9 @@\n     }\n   };\n \n   const handleFormSubmit = () => {\n+    console.log(\"SUBMIT FORM START \");\n     setIsLoading(true);\n     const imeNaGrupa = grupa.ime;\n     const imeNaPodgrupa = podgrupa.ime;\n \n"
                },
                {
                    "date": 1645868147556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,8 +146,9 @@\n     console.log(\"SUBMIT FORM START \");\n     setIsLoading(true);\n     const imeNaGrupa = grupa.ime;\n     const imeNaPodgrupa = podgrupa.ime;\n+    console.log(\"podgrupa \", podgrupa);\n \n     const novArtikal = {\n       ime,\n       cena,\n"
                },
                {
                    "date": 1645868167311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n   const handleFormSubmit = () => {\n     console.log(\"SUBMIT FORM START \");\n     setIsLoading(true);\n     const imeNaGrupa = grupa.ime;\n-    const imeNaPodgrupa = podgrupa.ime;\n+    const imeNaPodgrupa = podgrupa?.ime;\n     console.log(\"podgrupa \", podgrupa);\n \n     const novArtikal = {\n       ime,\n"
                }
            ],
            "date": 1641128867506,
            "name": "Commit-0",
            "content": "import React, { useState, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, Grid, Typography, Card } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useStyles from './ArtikalCreateStyles';\nimport { postRequest, putRequest } from '../../../services/httpService';\n\nconst ArtikalCreate = (props) => {\n  const classes = useStyles();\n  const formRef = useRef('form');\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const [id, setid] = useState(location.state ? location.state.id : '');\n  const [ime, setIme] = useState(location.state ? location.state.ime : '');\n  const [slikaUrl, setSlikaUrl] = useState(\n    location.state ? location.state.slikaUrl : ''\n  );\n  const [grupa, setGrupa] = useState(\n    location.state ? location.state.grupa : ''\n  );\n  const [podgrupa, setPodgrupa] = useState(\n    location.state ? location.state.podgrupa : ''\n  );\n  const [opis, setOpis] = useState(location.state ? location.state.opis : '');\n  const [cena, setCena] = useState(location.state ? location.state.cena : '');\n  const [dostapnost, setDostapnost] = useState(\n    location.state ? location.state.dostapnost : ''\n  );\n\n  const onCreateArtikal = async (path, body) => {\n    const result = await postRequest(path, body);\n    if (result.status === 200 || result.status === 201) {\n      setTimeout(() => {\n        setIsLoading(false);\n        setid('');\n        setIme('');\n        setSlikaUrl('');\n        setCena('');\n        setDostapnost('');\n        setOpis('');\n        setGrupa('');\n        setSuccessMessage(\n          location.state\n            ? 'Artiklot e uspeshno promenet!'\n            : 'Artiklot e uspeshno kreiran!'\n        );\n        setOpenSnackbar(true);\n      }, 1000);\n    }\n  };\n\n  const onUpdateArtikal = async (path, body, params) => {\n    const result = await putRequest(path, body, params);\n    if (result.status === 200 || result.status === 201) {\n      setTimeout(() => {\n        setIsLoading(false);\n        setSuccessMessage(\n          !location.state\n            ? 'Artiklot e uspeshno kreiran!'\n            : 'Artiklot e uspeshno promenet!'\n        );\n        setOpenSnackbar(true);\n      }, 1000);\n    }\n  };\n\n  const handleFormSubmit = () => {\n    setIsLoading(true);\n    const novArtikal = {\n      ime,\n      cena,\n      grupa,\n      slikaUrl,\n      opis,\n      dostapnost,\n    };\n\n    if (location.state) {\n      onUpdateArtikal('/partneri', novArtikal, `/${location.state.id}`);\n    } else {\n      onCreateArtikal('/partneri', novArtikal);\n    }\n  };\n\n  const handleChange = (event, source) => {\n    switch (source) {\n      case 'ime':\n        return setIme(event.target.value);\n      case 'cena':\n        return setCena(event.target.value);\n      case 'grupa':\n        return setGrupa(event.target.value);\n      case 'podgrupa':\n        return setPodgrupa(event.target.value);\n      case 'slikaUrl':\n        return setSlikaUrl(event.target.value);\n      case 'opis':\n        return setOpis(event.target.value);\n      case 'dostapnost':\n        return setDostapnost(event.target.value);\n      default:\n        return;\n    }\n  };\n\n  const goBackToArtikliList = () => {\n    // let path = `/artikli/list`;\n    history.goBack();\n  };\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Typography variant='h5'>Kreiraj Nov Artikal</Typography>\n      <Card className={classes.card}>\n        <ValidatorForm\n          ref={formRef}\n          onSubmit={handleFormSubmit}\n          onError={(errors) => {}}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                disabled\n                className={classes.inputField}\n                fullWidth\n                label='Id'\n                type='text'\n                name='id'\n                value={id}\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Grupa na artikal'\n                onChange={(event) => handleChange(event, 'grupa')}\n                type='text'\n                name='grupaNaArtikal'\n                value={grupa}\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Cena'\n                onChange={(event) => handleChange(event, 'cena')}\n                type='text'\n                name='cena'\n                value={cena}\n                validators={['required']}\n                errorMessages={['poleto e zadolzhitelno']}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Slika na artikal'\n                onChange={(event) => handleChange(event, 'slikaUrl')}\n                type='text'\n                name='slikaNaArtikal'\n                value={slikaUrl}\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Opis na artikal'\n                onChange={(event) => handleChange(event, 'opis')}\n                type='text'\n                name='opisNaArtikal'\n                value={opis}\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Dali e artiklot dostapen ?'\n                onChange={(event) => handleChange(event, 'dostapnost')}\n                type='text'\n                name='dostapnost'\n                value={dostapnost}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.buttons}>\n            {isLoading ? (\n              <div className={classes.spinner}>\n                <CircularProgress color='secondary' />\n              </div>\n            ) : (\n              <div>\n                <Button\n                  color='primary'\n                  variant='contained'\n                  type='submit'\n                  className={classes.buttonSave}\n                >\n                  <span className='pl-8 capitalize'>Save</span>\n                </Button>\n                <Button\n                  color='primary'\n                  className={classes.buttonCancel}\n                  onClick={goBackToArtikliList}\n                >\n                  <span className='pl-8 capitalize'>Cancel</span>\n                </Button>\n              </div>\n            )}\n          </div>\n        </ValidatorForm>\n      </Card>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n      >\n        <Alert onClose={handleCloseSnackbar} severity='success'>\n          {successMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default ArtikalCreate;\n"
        }
    ]
}