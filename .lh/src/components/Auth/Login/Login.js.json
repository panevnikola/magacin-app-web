{
    "sourceFile": "src/components/Auth/Login/Login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1642867400495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1642867400495,
            "name": "Commit-0",
            "content": "import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Grid, Button, CircularProgress } from '@material-ui/core';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\n\nimport useStyles from './LoginStyles';\nimport { postRequest } from '../../../services/httpService';\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const formRef = useRef('form');\n  const history = useHistory();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleUsername = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const redirectToDashboard = () => {\n    let path = '/promet/list/fakturi';\n    history.replace(path);\n  };\n\n  const handleSubmit = async () => {\n    console.log(username, password);\n    setLoading(true);\n    const result = await postRequest('/login', { username, password });\n    console.log('result', result);\n    if (result.status === 200 || result.status === 201) {\n      setLoading(false);\n      localStorage.setItem('token', result.data.token);\n      localStorage.setItem('username', result.data.username);\n      localStorage.setItem('firstName', result.data.firstName);\n      localStorage.setItem('lastName', result.data.lastName);\n      redirectToDashboard();\n    } else {\n      alert('Wrong credentials!');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={classes.content}>\n      <Card className={classes.loginCard}>\n        <Grid container>\n          <Grid item lg={5} md={5} sm={5} xs={12}>\n            <div className={classes.imageContainer}>\n              <img\n                src='https://www.ginesys.in/sites/default/files/articles/download4.png'\n                alt=''\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n          <Grid item lg={7} md={7} sm={7} xs={12}>\n            <div className={classes.loginForm}>\n              <ValidatorForm\n                ref={formRef}\n                onSubmit={handleSubmit}\n                onError={(errors) => handleSubmit()}\n              >\n                <TextValidator\n                  className={classes.inputUsername}\n                  variant='outlined'\n                  label='Username'\n                  onChange={handleUsername}\n                  type='text'\n                  name='username'\n                  value={username}\n                  validators={['required']}\n                  errorMessages={['this field is required']}\n                />\n                <TextValidator\n                  className={classes.inputPassword}\n                  label='Password'\n                  variant='outlined'\n                  onChange={handlePassword}\n                  name='password'\n                  type='password'\n                  value={password}\n                  validators={['required']}\n                  errorMessages={['this field is required']}\n                />\n                <div className={classes.wrapperContainer}>\n                  <div className={classes.wrapper}>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      disabled={loading}\n                      type='submit'\n                      fullWidth\n                    >\n                      Login\n                    </Button>\n                    {loading && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </div>\n                  <span className={classes.buttonSpace}>or</span>\n                  <Button\n                    className={classes.capitalize}\n                    onClick={() => history.push('/signup')}\n                  >\n                    Register\n                  </Button>\n                </div>\n                <Button\n                  className={classes.primary}\n                  onClick={() =>\n                    history.push('/login')\n                  }\n                >\n                  Forgot password?\n                </Button>\n              </ValidatorForm>\n            </div>\n          </Grid>\n        </Grid>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;\n"
        }
    ]
}