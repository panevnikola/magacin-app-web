{
    "sourceFile": "src/components/Grupi/GrupaCreate/GrupaCreate.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1643126182341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643126207677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,9 @@\n \n     const formData = new FormData();\n \n     formData.append('image', slika);\n+    formData.append('url', slikaUrl);\n     formData.append('ime', ime);\n     formData.append('podGrupa', podGrupa);\n \n     console.log('handleFormSubmit location.state ', location.state);\n"
                },
                {
                    "date": 1643126252802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,8 +146,10 @@\n       case 'ime':\n         return setIme(event.target.value);\n       case 'slika':\n         return setSlika(event.target.files[0]);\n+      case 'slikaUrl':\n+        return setSlika(event.target.value);\n       case 'podGrupa':\n         return setPodGrupa(event.target.value);\n       default:\n         return;\n"
                },
                {
                    "date": 1643126262074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n         return setIme(event.target.value);\n       case 'slika':\n         return setSlika(event.target.files[0]);\n       case 'slikaUrl':\n-        return setSlika(event.target.value);\n+        return setSlikaUrl(event.target.value);\n       case 'podGrupa':\n         return setPodGrupa(event.target.value);\n       default:\n         return;\n"
                },
                {
                    "date": 1643126450059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,8 @@\n \n     formData.append('image', slika);\n     formData.append('url', slikaUrl);\n     formData.append('ime', ime);\n-    formData.append('podGrupa', podGrupa);\n \n     console.log('handleFormSubmit location.state ', location.state);\n \n     if (location.state) {\n@@ -148,10 +147,8 @@\n       case 'slika':\n         return setSlika(event.target.files[0]);\n       case 'slikaUrl':\n         return setSlikaUrl(event.target.value);\n-      case 'podGrupa':\n-        return setPodGrupa(event.target.value);\n       default:\n         return;\n     }\n   };\n"
                },
                {
                    "date": 1643127964997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,26 @@\n     }\n     setIsLoading(false);\n   };\n \n+  const handleFormSubmit = () => {\n+    setIsLoading(true);\n+\n+    const novaGrupa = {\n+      ime,\n+      slikaUrl: '',\n+      url: slikaUrl\n+    };\n+\n+    if (location.state) {\n+      console.log('UPDT ', novArtikal);\n+      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+    } else {\n+      console.log('CRTE ', novArtikal);\n+      onCreateArtikal('/artikli', novArtikal);\n+    }\n+  };\n+\n   const handleFormSubmit = (e) => {\n     e.preventDefault();\n     setIsLoading(true);\n \n"
                },
                {
                    "date": 1643128000753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n     }\n     setIsLoading(false);\n   };\n \n-  const handleFormSubmit = () => {\n+  const handleFormSubmitWithUrl = () => {\n     setIsLoading(true);\n \n     const novaGrupa = {\n       ime,\n@@ -127,13 +127,11 @@\n       url: slikaUrl\n     };\n \n     if (location.state) {\n-      console.log('UPDT ', novArtikal);\n-      onUpdateArtikal('/artikli', novArtikal, `/${location.state.id}`);\n+      onUpdateGrupa('/grupi', novaGrupa, `/${location.state.id}`);\n     } else {\n-      console.log('CRTE ', novArtikal);\n-      onCreateArtikal('/artikli', novArtikal);\n+      onCreateGrupa('/grupiWithUrl', novaGrupa);\n     }\n   };\n \n   const handleFormSubmit = (e) => {\n"
                },
                {
                    "date": 1643128090288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,9 @@\n       onCreateGrupa('/grupiWithUrl', novaGrupa);\n     }\n   };\n \n+  // Use this submitHandler instead when uploading local images needed\n   const handleFormSubmit = (e) => {\n     e.preventDefault();\n     setIsLoading(true);\n \n"
                },
                {
                    "date": 1643128100044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n       </Typography>\n       <Card className={classes.card}>\n         <ValidatorForm\n           ref={formRef}\n-          onSubmit={handleFormSubmit}\n+          onSubmit={handleFormSubmitWithUrl}\n           onError={(errors) => {}}\n         >\n           <Grid container spacing={6}>\n             <Grid item lg={6} md={6} sm={12} xs={12}>\n"
                },
                {
                    "date": 1643128296300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,11 @@\n   );\n   const [slikaUrl, setSlikaUrl] = useState(\n     location.state ? location.state.slikaUrl : ''\n   );\n+  const [url, setUrl] = useState(\n+    location.state ? location.state.url : ''\n+  );\n   const [podGrupa, setPodGrupa] = useState(\n     location.state ? location.state.podGrupa : ''\n   );\n \n@@ -190,8 +193,9 @@\n     <Card>\n       <CardMedia\n         className={classes.image}\n         image={slikaUrl}\n+        image={url}\n         title='Slika na grupa'\n       />\n     </Card>\n   );\n"
                },
                {
                    "date": 1643128313766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n   const FileData = () => (\n     <Card>\n       <CardMedia\n         className={classes.image}\n-        image={slikaUrl}\n+        // image={slikaUrl} // use this when local images implemented\n         image={url}\n         title='Slika na grupa'\n       />\n     </Card>\n"
                },
                {
                    "date": 1643128407817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,10 @@\n   const [podGrupa, setPodGrupa] = useState(\n     location.state ? location.state.podGrupa : ''\n   );\n \n+  console.log('LLOCATION STATE ', location.state);\n+\n   useEffect(() => {\n     if (id) {\n       onFetchPodgrupi();\n     }\n"
                },
                {
                    "date": 1643128449333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n     <Card>\n       <CardMedia\n         className={classes.image}\n         // image={slikaUrl} // use this when local images implemented\n-        image={url}\n+        src={url}\n         title='Slika na grupa'\n       />\n     </Card>\n   );\n"
                },
                {
                    "date": 1643128541508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,11 +44,9 @@\n   );\n   const [slikaUrl, setSlikaUrl] = useState(\n     location.state ? location.state.slikaUrl : ''\n   );\n-  const [url, setUrl] = useState(\n-    location.state ? location.state.url : ''\n-  );\n+  const [url, setUrl] = useState(location.state ? location.state.url : '');\n   const [podGrupa, setPodGrupa] = useState(\n     location.state ? location.state.podGrupa : ''\n   );\n \n@@ -128,9 +126,9 @@\n \n     const novaGrupa = {\n       ime,\n       slikaUrl: '',\n-      url: slikaUrl\n+      url: slikaUrl,\n     };\n \n     if (location.state) {\n       onUpdateGrupa('/grupi', novaGrupa, `/${location.state.id}`);\n@@ -169,8 +167,10 @@\n       case 'slika':\n         return setSlika(event.target.files[0]);\n       case 'slikaUrl':\n         return setSlikaUrl(event.target.value);\n+      case 'url':\n+        return setUrl(event.target.value);\n       default:\n         return;\n     }\n   };\n@@ -250,12 +250,12 @@\n               <TextValidator\n                 className={classes.inputField}\n                 fullWidth\n                 label='Url slika na artikal'\n-                onChange={(event) => handleChange(event, 'slikaUrl')}\n+                onChange={(event) => handleChange(event, 'url')}\n                 type='text'\n-                name='slikaUrl'\n-                value={slikaUrl}\n+                name='url'\n+                value={url}\n               />\n               {slika && <FileData />}\n             </Grid>\n           </Grid>\n"
                },
                {
                    "date": 1643128554680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n \n     const novaGrupa = {\n       ime,\n       slikaUrl: '',\n-      url: slikaUrl,\n+      url: url,\n     };\n \n     if (location.state) {\n       onUpdateGrupa('/grupi', novaGrupa, `/${location.state.id}`);\n"
                },
                {
                    "date": 1643128592478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,10 +194,10 @@\n   const FileData = () => (\n     <Card>\n       <CardMedia\n         className={classes.image}\n-        // image={slikaUrl} // use this when local images implemented\n-        src={url}\n+        image={url} // use this when local images implemented\n+        // src={url}\n         title='Slika na grupa'\n       />\n     </Card>\n   );\n"
                },
                {
                    "date": 1643128618089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n   const FileData = () => (\n     <Card>\n       <CardMedia\n         className={classes.image}\n-        image={url} // use this when local images implemented\n+        // image={url} // use this when local images implemented\n         // src={url}\n         title='Slika na grupa'\n       />\n     </Card>\n"
                },
                {
                    "date": 1643128625758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n   const FileData = () => (\n     <Card>\n       <CardMedia\n         className={classes.image}\n-        // image={url} // use this when local images implemented\n+        image={url} // use this when local images implemented\n         // src={url}\n         title='Slika na grupa'\n       />\n     </Card>\n"
                },
                {
                    "date": 1643128813961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -255,9 +255,10 @@\n                 type='text'\n                 name='url'\n                 value={url}\n               />\n-              {slika && <FileData />}\n+              {/* {slika && <FileData />} should be like this when local images are implemented */}\n+              {url && <FileData />}\n             </Grid>\n           </Grid>\n           <div className={classes.buttons}>\n             {isLoading ? (\n"
                }
            ],
            "date": 1643126182341,
            "name": "Commit-0",
            "content": "import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  Button,\n  Grid,\n  Typography,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  InputLabel,\n} from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useStyles from './GrupaCreateStyles';\nimport {\n  postRequest,\n  putRequest,\n  getRequest,\n} from '../../../services/httpService';\nimport PodGrupaItem from '../../PodGrupi/PodGrupaItem';\n\nconst GrupaCreate = (props) => {\n  const classes = useStyles();\n  const formRef = useRef('form');\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [podgrupi, setPodgrupi] = useState([]);\n\n  const [id, setId] = useState(location.state ? location.state.id : '');\n  const [ime, setIme] = useState(location.state ? location.state.ime : '');\n  const [slika, setSlika] = useState(\n    location.state ? location.state.slikaUrl : ''\n  );\n  const [slikaUrl, setSlikaUrl] = useState(\n    location.state ? location.state.slikaUrl : ''\n  );\n  const [podGrupa, setPodGrupa] = useState(\n    location.state ? location.state.podGrupa : ''\n  );\n\n  useEffect(() => {\n    if (id) {\n      onFetchPodgrupi();\n    }\n  }, []);\n\n  const onFetchPodgrupi = useCallback(async () => {\n    const result = await getRequest(`/podgrupi/grupa/${id}`);\n    if (result.status === 200) {\n      setPodgrupi(result.data);\n    }\n  }, []);\n\n  const onCreateGrupa = async (path, body) => {\n    try {\n      const result = await postRequest(path, body);\n\n      if (\n        result.status === 301 ||\n        result.status === 500 ||\n        result.status === 404\n      ) {\n        setErrorMessage(\n          location.state\n            ? 'Greshka pri promena na grupa!'\n            : 'Greshka pri kreiranje na grupa!'\n        );\n        setOpenSnackbar(true);\n        setIsLoading(false);\n      }\n\n      if (result.status === 200 || result.status === 201) {\n        setTimeout(() => {\n          setIsLoading(false);\n          setId('');\n          setIme('');\n          setSlika('');\n          setPodGrupa('');\n          setSuccessMessage(\n            location.state\n              ? 'Grupata e uspeshno promeneta!'\n              : 'Grupata e uspeshno kreirana!'\n          );\n          setOpenSnackbar(true);\n        }, 1000);\n      }\n      //   setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log('Error catched ', err);\n    }\n  };\n\n  const onUpdateGrupa = async (path, body, params) => {\n    const result = await putRequest(path, body, params);\n    if (result.status === 200 || result.status === 201) {\n      setTimeout(() => {\n        setIsLoading(false);\n        setSuccessMessage(\n          !location.state\n            ? 'Grupata e uspeshno kreiran!'\n            : 'Grupata e uspeshno promenet!'\n        );\n        setOpenSnackbar(true);\n      }, 1000);\n    }\n    setIsLoading(false);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const formData = new FormData();\n\n    formData.append('image', slika);\n    formData.append('ime', ime);\n    formData.append('podGrupa', podGrupa);\n\n    console.log('handleFormSubmit location.state ', location.state);\n\n    if (location.state) {\n      onUpdateGrupa('/grupi', formData, `/${location.state.id}`);\n    } else {\n      onCreateGrupa('/grupi', formData);\n    }\n  };\n\n  const handleChange = (event, source) => {\n    if (source === 'slika') {\n      setSlikaUrl(URL.createObjectURL(event.target.files[0]));\n    }\n    switch (source) {\n      case 'ime':\n        return setIme(event.target.value);\n      case 'slika':\n        return setSlika(event.target.files[0]);\n      case 'podGrupa':\n        return setPodGrupa(event.target.value);\n      default:\n        return;\n    }\n  };\n\n  const goBackToGrupiList = () => {\n    history.goBack();\n  };\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  const FileData = () => (\n    <Card>\n      <CardMedia\n        className={classes.image}\n        image={slikaUrl}\n        title='Slika na grupa'\n      />\n    </Card>\n  );\n\n  return (\n    <div className={classes.container}>\n      <Typography variant='h5' className={classes.title}>\n        {location.state ? ime : 'Креирај нова група'}\n      </Typography>\n      <Card className={classes.card}>\n        <ValidatorForm\n          ref={formRef}\n          onSubmit={handleFormSubmit}\n          onError={(errors) => {}}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                disabled\n                className={classes.inputField}\n                fullWidth\n                label='Id'\n                type='text'\n                name='id'\n                value={id}\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Ime na grupa'\n                onChange={(event) => handleChange(event, 'ime')}\n                type='text'\n                name='imeNaGrupa'\n                value={ime}\n                validators={['required']}\n                errorMessages={['poleto e zadolzhitelno']}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <InputLabel htmlFor='image'>Slika na grupa</InputLabel>\n              <TextValidator\n                id='image'\n                className={classes.inputField}\n                fullWidth\n                onChange={(event) => handleChange(event, 'slika')}\n                type='file'\n                name='image'\n              />\n              <TextValidator\n                className={classes.inputField}\n                fullWidth\n                label='Url slika na artikal'\n                onChange={(event) => handleChange(event, 'slikaUrl')}\n                type='text'\n                name='slikaUrl'\n                value={slikaUrl}\n              />\n              {slika && <FileData />}\n            </Grid>\n          </Grid>\n          <div className={classes.buttons}>\n            {isLoading ? (\n              <div className={classes.spinner}>\n                <CircularProgress color='secondary' />\n              </div>\n            ) : (\n              <div>\n                <Button\n                  color='primary'\n                  variant='contained'\n                  type='submit'\n                  className={classes.buttonSave}\n                >\n                  <span className='pl-8 capitalize'>Save</span>\n                </Button>\n                <Button\n                  color='primary'\n                  className={classes.buttonCancel}\n                  onClick={goBackToGrupiList}\n                >\n                  <span className='pl-8 capitalize'>Cancel</span>\n                </Button>\n              </div>\n            )}\n          </div>\n        </ValidatorForm>\n      </Card>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          style={{ backgroundColor: errorMessage ? 'red' : '' }}\n        >\n          {successMessage}\n        </Alert>\n      </Snackbar>\n\n      {location.state && (\n        <div className={classes.podgrupi}>\n          <Typography variant='h5' className={classes.title}>\n            Подгрупи\n          </Typography>\n          <div className={classes.podgrupiList}>\n            {podgrupi.length < 1 && (\n              <Typography variant='body1' className={classes.title}>\n                Креирајте подгрупи\n              </Typography>\n            )}\n            {podgrupi && podgrupi.map((item) => <PodGrupaItem item={item} />)}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GrupaCreate;\n"
        }
    ]
}