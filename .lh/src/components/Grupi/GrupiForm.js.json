{
    "sourceFile": "src/components/Grupi/GrupiForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1641125540770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643128208045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,10 @@\n                     <TableCell>\n                       <div className={classes.imageContainer}>\n                         <img\n                           className={classes.image}\n-                          src={grupa.slikaUrl}\n+                          // src={grupa.slikaUrl} use this when local images implemented\n+                          src={grupa.url}\n                           alt=''\n                         />\n                       </div>\n                     </TableCell>\n"
                },
                {
                    "date": 1643128215994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,16 @@\n                       <div className={classes.imageContainer}>\n                         <img\n                           className={classes.image}\n                           // src={grupa.slikaUrl} use this when local images implemented\n-                          src={grupa.url}\n+                          src={grupa.useImperativeHandle(\n+                            first,\n+                            () => {\n+                              second;\n+                            },\n+                            [third]\n+                          );\n+                          }\n                           alt=''\n                         />\n                       </div>\n                     </TableCell>\n"
                }
            ],
            "date": 1641125540770,
            "name": "Commit-0",
            "content": "import React, { useState, useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TablePagination,\n  Button,\n  Card,\n  Typography,\n  TextField,\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { getRequest } from '../../services/httpService';\nimport useStyles from './GrupiStyles';\nimport ConfirmationDialog from '../UI/ConfirmationDialog';\n\nconst GrupiForm = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [grupi, setGrupi] = useState([]);\n  const [search, setSearch] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const [shouldOpenDeleteDialog, setShouldOpenDeleteDialog] = useState(false);\n  const [grupaToDelete, setGrupaToDelete] = useState(null);\n\n  useEffect(() => {\n    onFetchGrupi();\n  }, []);\n\n  const onFetchGrupi = useCallback(async () => {\n    const result = await getRequest('/grupi');\n    if (result.status === 200) {\n      setGrupi(result.data);\n    }\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleSearch = (value) => {\n    setSearch(value);\n  };\n\n  const handleRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const redirectToCreateGrupa = () => {\n    let path = `/grupi/create`;\n    history.push(path);\n  };\n\n  const editGrupa = (event, grupa) => {\n    event.stopPropagation();\n    let path = `/grupi/create`;\n    history.push(path, grupa);\n  };\n\n  const onDeleteGrupa = (event, grupa) => {\n    event.stopPropagation();\n    setGrupaToDelete(grupa);\n    setShouldOpenDeleteDialog(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    onFetchGrupi();\n    setShouldOpenDeleteDialog(false);\n  };\n\n  console.log('process.env.PUBLIC_URL ', process.env.PUBLIC_URL);\n\n  return (\n    <React.Fragment>\n      <div className={classes.searchContainer}>\n        <Button\n          variant='contained'\n          color='secondary'\n          onClick={() => redirectToCreateGrupa()}\n        >\n          Kreiraj Nova Grupa\n        </Button>\n\n        <form noValidate autoComplete='off' className={classes.formSearch}>\n          <TextField\n            id='filter-grupi'\n            label='Пребарувај групи'\n            fullWidth\n            value={search}\n            onChange={(e) => handleSearch(e.target.value)}\n          />\n        </form>\n      </div>\n      {grupi.length === 0 ? (\n        <Typography variant='h6' style={{ marginTop: 30 }}>\n          Не се пронајдени групи во датабазата.\n        </Typography>\n      ) : (\n        <Card className={classes.card} elevation={6}>\n          <Table\n            style={{ whiteSpace: 'pre', minWidth: '750px' }}\n            stickyHeader={true}\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography variant='subtitle2'>Id</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='subtitle2'>Slika</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='subtitle2'>Ime</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='subtitle2'>Korekcija</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {grupi\n                .filter(\n                  (grupa) =>\n                  grupa.id\n                      .toString()\n                      .toLowerCase()\n                      .indexOf(search.toLowerCase()) !== -1 ||\n                      grupa.ime\n                      .toLowerCase()\n                      .indexOf(search.toLowerCase()) !== -1\n                )\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((grupa, index) => (\n                  <TableRow\n                    key={grupa.id}\n                    className={classes.tableRow}\n                    onClick={(event) => editGrupa(event, grupa)}\n                  >\n                    <TableCell>{grupa.id}</TableCell>\n                    <TableCell>\n                      <div className={classes.imageContainer}>\n                        <img\n                          className={classes.image}\n                          src={grupa.slikaUrl}\n                          alt=''\n                        />\n                      </div>\n                    </TableCell>\n                    <TableCell\n                      align='left'\n                      style={{ whiteSpace: 'normal', wordWrap: 'break-word' }}\n                    >\n                      {grupa.ime}\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={(event) =>\n                          editGrupa(event, grupa)\n                        }\n                      >\n                        <EditIcon color='secondary'>edit</EditIcon>\n                      </IconButton>\n                      <IconButton\n                        onClick={(event) =>\n                          onDeleteGrupa(event, grupa)\n                        }\n                      >\n                        <DeleteIcon color='error'>delete</DeleteIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className='px-16'\n            rowsPerPageOptions={[5, 10, 25]}\n            component='div'\n            count={grupi.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              'aria-label': 'Previous Page',\n            }}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page',\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleRowsPerPage}\n          />\n        </Card>\n      )}\n      {shouldOpenDeleteDialog && (\n        <ConfirmationDialog\n          open={shouldOpenDeleteDialog}\n          handleClose={handleDeleteDialogClose}\n          onYesClick={() => {}}\n          text='Дали сигурно сакате да ја избришете групата ?'\n          item={grupaToDelete}\n          path='grupi'\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default GrupiForm;\n"
        }
    ]
}